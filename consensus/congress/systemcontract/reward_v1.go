package systemcontract

import (
	"math/big"

	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core"
	"github.com/ethereum/go-ethereum/core/state"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/log"
	"github.com/ethereum/go-ethereum/params"
)

const (
	rewardV1Code = "0x6080604052600436106101c65760003560e01c806371a1bb75116100f7578063c4d66de811610095578063e567cad611610064578063e567cad6146104e8578063ec0cb3361461024c578063f3b1cc67146104fd578063f851a44014610512576101cd565b8063c4d66de81461044a578063c885bc581461047d578063c967f90f14610492578063e4c335dd146104be576101cd565b8063837833b6116100d1578063837833b6146103c35780638f283970146103d85780639001eed81461040b578063c457f58014610420576101cd565b806371a1bb7514610384578063741579b1146103995780637dc0d1d0146103ae576101cd565b806322d502d41161016457806339ddcb181161013e57806339ddcb18146102ff578063425c8abd1461031457806344f999001461033e5780636b2fc2dc1461036f576101cd565b806322d502d4146102ab5780632cc93e82146102d55780632e4f67e41461024c576101cd565b8063158ef93e116101a0578063158ef93e1461022357806315de360e1461024c5780631cb44dfc14610261578063228cb73314610296576101cd565b806303fab4f6146101d2578063087273d8146101f95780630e6361af1461020e576101cd565b366101cd57005b600080fd5b3480156101de57600080fd5b506101e7610527565b60408051918252519081900360200190f35b34801561020557600080fd5b506101e7610534565b34801561021a57600080fd5b506101e761053a565b34801561022f57600080fd5b50610238610540565b604080519115158252519081900360200190f35b34801561025857600080fd5b506101e7610549565b34801561026d57600080fd5b506102946004803603602081101561028457600080fd5b50356001600160a01b0316610550565b005b3480156102a257600080fd5b506101e76105eb565b3480156102b757600080fd5b50610294600480360360208110156102ce57600080fd5b50356105f1565b3480156102e157600080fd5b50610294600480360360208110156102f857600080fd5b50356106c4565b34801561030b57600080fd5b506101e7610797565b34801561032057600080fd5b506102946004803603602081101561033757600080fd5b503561079d565b34801561034a57600080fd5b50610353610829565b604080516001600160a01b039092168252519081900360200190f35b34801561037b57600080fd5b506101e761082f565b34801561039057600080fd5b50610353610835565b3480156103a557600080fd5b506101e761083b565b3480156103ba57600080fd5b50610353610847565b3480156103cf57600080fd5b506101e7610856565b3480156103e457600080fd5b50610294600480360360208110156103fb57600080fd5b50356001600160a01b031661085c565b34801561041757600080fd5b506101e7610952565b34801561042c57600080fd5b506102946004803603602081101561044357600080fd5b5035610960565b34801561045657600080fd5b506102946004803603602081101561046d57600080fd5b50356001600160a01b03166109ec565b34801561048957600080fd5b50610294610a69565b34801561049e57600080fd5b506104a7610cea565b6040805161ffff9092168252519081900360200190f35b3480156104ca57600080fd5b50610294600480360360208110156104e157600080fd5b5035610cef565b3480156104f457600080fd5b506101e7610dc7565b34801561050957600080fd5b506101e7610dcd565b34801561051e57600080fd5b50610353610dd4565b68056bc75e2d6310000081565b60015481565b60035481565b60005460ff1681565b6201518081565b60005461010090046001600160a01b031633146105a1576040805162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b604482015290519081900360640190fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517f09ad0a3595604db9b7aef0dbd4918cea3642b96bc65ad7c9fb501a1529becd7990600090a250565b60045481565b60005461010090046001600160a01b03163314610642576040805162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b604482015290519081900360640190fd5b612710811115610689576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726174657360981b604482015290519081900360640190fd5b60028190556040805182815290517f030d2a5527e850a5d0ae32f3d3fea5bfc200a464ddba258e66c984507ac6c6e09181900360200190a150565b60005461010090046001600160a01b03163314610715576040805162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b604482015290519081900360640190fd5b61271081111561075c576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c696420726174657360981b604482015290519081900360640190fd5b60018190556040805182815290517f030d2a5527e850a5d0ae32f3d3fea5bfc200a464ddba258e66c984507ac6c6e09181900360200190a150565b60075481565b60005461010090046001600160a01b031633146107ee576040805162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b604482015290519081900360640190fd5b60048190556040805182815290517f0a20771588202779c3c4cb1dedde6e8dcc8dbcb6739073bf52f4a7e8d49040269181900360200190a150565b61f00681565b60025481565b61f00581565b670de0b6b3a764000081565b6005546001600160a01b031681565b60085481565b806001600160a01b0381166108aa576040805162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015290519081900360640190fd5b60005461010090046001600160a01b031633146108fb576040805162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b604482015290519081900360640190fd5b60008054610100600160a81b0319166101006001600160a01b03858116820292909217808455604051919004909116917f927cc064d7b7fa546fa7706bc01845d27d06f15af3ae90a672cc44735928e96191a25050565b69010f0cf064dd5920000081565b60005461010090046001600160a01b031633146109b1576040805162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b604482015290519081900360640190fd5b60088190556040805182815290517f16cdbf5bac3b3a4284e8e9e95a1ca50fe49e96cabd04e1af92bf4f5ee216bd169181900360200190a150565b60005460ff1615610a3a576040805162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b604482015290519081900360640190fd5b6000805460ff196001600160a01b0390931661010002610100600160a81b031990911617919091166001179055565b3361f00514610abf576040805162461bcd60e51b815260206004820152601860248201527f56616c696461746f727320636f6e7472616374206f6e6c790000000000000000604482015290519081900360640190fd5b600454610acb57610ce8565b600354610ad9576001546003555b60085415801590610af55750600854610af3904390610de8565b155b15610b0657610b02610e33565b6003555b6000610b2b612710610b25600354600454610f1b90919063ffffffff16565b90610f74565b905047811115610b3b5750610ce8565b610bab61f0056001600160a01b031663be1ff5d96040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7957600080fd5b505afa158015610b8d573d6000803e3d6000fd5b505050506040513d6020811015610ba357600080fd5b505182610fb6565b600061f0056001600160a01b0316635e6306486040518163ffffffff1660e01b815260040160206040518083038186803b158015610be857600080fd5b505afa158015610bfc573d6000803e3d6000fd5b505050506040513d6020811015610c1257600080fd5b50516003549091506127109082011115610c3957600354610c3690612710906110a0565b90505b6000610c56612710610b2584600454610f1b90919063ffffffff16565b90506000610c6f846004546110a090919063ffffffff16565b905047811115610c825750505050610ce8565b61f0056001600160a01b031663cd2192f182846040518363ffffffff1660e01b8152600401808281526020019150506000604051808303818588803b158015610cca57600080fd5b505af1158015610cde573d6000803e3d6000fd5b5050505050505050505b565b601581565b60005461010090046001600160a01b03163314610d40576040805162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b604482015290519081900360640190fd5b612710811115610d8c576040805162461bcd60e51b8152602060048201526012602482015271496e76616c69642070657263656e7461676560701b604482015290519081900360640190fd5b60078190556040805182815290517fb2d4f35fa6c276cb006cda166cf2900f7348e308290644682abf56ea01948d1d9181900360200190a150565b60065481565b6206270081565b60005461010090046001600160a01b031681565b6000610e2a83836040518060400160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f00000000000000008152506110e2565b90505b92915050565b600154600554600091906001600160a01b031615610f1657600554604080516317a6948f60e21b81526000600482015290516001600160a01b0390921691635e9a523c91602480820192602092909190829003018186803b158015610e9757600080fd5b505afa925050508015610ebc57506040513d6020811015610eb757600080fd5b505160015b610ec557610f16565b806006541115610f1257600654600090610edf90836110a0565b90506000610efe600654610b2561271085610f1b90919063ffffffff16565b90506007548110610f0f5760025493505b50505b6006555b905090565b600082610f2a57506000610e2d565b82820282848281610f3757fe5b0414610e2a5760405162461bcd60e51b815260040180806020018281038252602181526020018061127b6021913960400191505060405180910390fd5b6000610e2a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611181565b8047101561100b576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d8060008114611056576040519150601f19603f3d011682016040523d82523d6000602084013e61105b565b606091505b505090508061109b5760405162461bcd60e51b815260040180806020018281038252603a815260200180611241603a913960400191505060405180910390fd5b505050565b6000610e2a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506111e6565b6000818361116e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561113357818101518382015260200161111b565b50505050905090810190601f1680156111605780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082848161117857fe5b06949350505050565b600081836111d05760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561113357818101518382015260200161111b565b5060008385816111dc57fe5b0495945050505050565b600081848411156112385760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561113357818101518382015260200161111b565b50505090039056fe416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220f48e5c5ae78e4feccf456c4694fcd995aa93415b5f6e471b85b3ee20637a3b8364736f6c634300060c0033"
)

type hardForkRewardV1 struct {
}

func (s *hardForkRewardV1) GetName() string {
	return RewardContractName
}

func (s *hardForkRewardV1) Update(config *params.ChainConfig, height *big.Int, state *state.StateDB) (err error) {
	code := common.FromHex(rewardV1Code)
	//write rewardCode to reward contract
	state.SetCode(RewardContractAddr, code)
	log.Debug("Write code to reward contract account", "addr", RewardContractAddr.String(), "code", code)

	return
}

func (s *hardForkRewardV1) Execute(state *state.StateDB, header *types.Header, chainContext core.ChainContext, config *params.ChainConfig) (err error) {

	return
}
